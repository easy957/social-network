{"version":3,"file":"static/js/932.9e2b3daa.chunk.js","mappings":"6KACA,EAAuB,oBAAvB,EAAmD,qBAAnD,EAAiF,sBAAjF,EAAqH,2BAArH,EAAuJ,oBAAvJ,EAAoL,sB,uCCApL,EAAwB,yBAAxB,EAAwD,wBAAxD,EAA6F,8BAA7F,EAAyI,+BAAzI,EAAsL,+B,SCuFtL,MA7EA,SAAmB,GAGjB,IAHqH,IAAlGA,EAAe,EAAfA,gBAAiBC,EAAe,EAAfA,gBAAgB,EAAD,EAAEC,SAAAA,OAAQ,MAAG,GAAE,MAAEC,YAAAA,OAAW,MAAG,EAAC,MAAEC,YAAAA,OAAW,MAAG,GAAE,EAC/FC,EAAaC,KAAKC,KAAKP,EAAkBE,GACzCM,EAAuB,GACpBC,EAAI,EAAGA,GAAKJ,EAAYI,IAC/BD,EAAME,KAAKD,GAGb,IAAME,EAAgBL,KAAKC,KAAKF,EAAaD,GAC7C,GAA0CQ,EAAAA,EAAAA,UAASN,KAAKC,KAAKJ,EAAcC,IAAa,eAAnFS,EAAc,KAAEC,EAAiB,KAChCC,GAAuBF,EAAiB,GAAKT,EAC7CY,EAAsBH,EAAiBT,EAAc,EAE3D,OACE,+BACE,iBAAKa,UAAWC,EAAc,UAC3Bb,EAAa,MACZ,mBACEY,UAAWC,EACXC,QAAS,kBAAML,EAAkBD,EAAiB,GAAG,EACrDO,SAAUP,GAAkB,GAAG,SAChC,OAIFR,EAAa,KACZ,mBACEY,UAAWC,EACXC,QAAS,kBAAML,EAAkBD,EAAiB,EAAE,EACpDO,SAA6B,IAAnBP,EAAqB,SAChC,OAOH,eAAII,UAAWC,EAAQ,SACpBV,EACEa,QAAO,SAACC,GAAI,OAAKP,EAAsBO,GAAQA,EAAON,CAAmB,IACzEO,KAAI,SAACD,GACJ,OACE,yBACE,mBACEH,QAAS,WACPlB,EAAgBqB,EAAMpB,EACxB,EACAe,UAAS,UAAKC,EAAM,YAAII,IAASnB,GAAee,GAAe,SAE9DI,KAPIA,EAWb,MAEHjB,EAAa,KACZ,mBACEY,UAAWC,EACXC,QAAS,kBAAML,EAAkBD,EAAiB,EAAE,EACpDO,SAAUP,IAAmBF,EAAc,SAC5C,MAIFN,EAAa,MACZ,mBACEY,UAAWC,EACXC,QAAS,kBAAML,EAAkBD,EAAiB,GAAG,EACrDO,SAAUP,GAAkBF,EAAgB,GAAG,SAChD,YAOX,E,UCzBA,MAhDA,SAAqB,GAAqC,IACpDa,EADiBC,EAAW,EAAXA,YAAaJ,EAAM,EAANA,OAiB5BK,EAA2B,CAC/BC,KAAMN,EAAOM,KACbC,OAA0B,OAAlBP,EAAOO,OAAkB,QAA2B,IAAlBP,EAAOO,OAAkB,OAAS,SAG9E,OACE,SAAC,KAAM,CAACC,oBAAkB,EAACH,cAAeA,EAAeI,SApB3D,SAAsBC,EAAkB,GAAyE,IAAtEC,EAAa,EAAbA,cACnCX,EAA0B,CAC9BM,KAAMI,EAAOJ,KACbC,OAA0B,SAAlBG,EAAOH,QAA6C,UAAlBG,EAAOH,QAA6B,MAG5EJ,GAASS,aAAaT,GAC1BA,EAAUU,YAAW,WACnBT,EAAYJ,EACd,GAAG,KAEHW,GAAc,EAChB,EAQkF,SAC7E,YAAe,EAAZG,aAAH,IAAiBC,EAAU,EAAVA,WAAuBC,GAAF,EAATC,UAAwB,EAAbD,eAAa,OACpD,UAAC,KAAI,CAACE,SAAUH,EAAW,WACzB,SAAC,KAAK,CAACI,KAAK,OAAOC,KAAK,OAAOC,YAAY,uBAC3C,UAAC,KAAK,CAACC,UAAU,SAASF,KAAK,SAAQ,WACrC,mBAAQG,MAAM,OAAM,SAAC,SACrB,mBAAQA,MAAM,OAAM,SAAC,kBACrB,mBAAQA,MAAM,QAAO,SAAC,2BAExB,mBACEJ,KAAK,SACLrB,QAAS,WACPkB,EAAc,SAAU,QACxBA,EAAc,OAAQ,IACtBZ,EAAY,CAAEE,KAAM,GAAIC,OAAQ,MAClC,EAAE,SACH,YAGI,GAIf,E,8BCxDaiB,EAAW,SAACC,GAAmB,OAAKA,EAAMC,UAAUC,KAAM,EAC1DC,EAAc,SAACH,GAAmB,OAAKA,EAAMC,UAAU7C,QAAS,EAChEgD,EAAqB,SAACJ,GAAmB,OAAKA,EAAMC,UAAU/C,eAAgB,EAC9EmD,EAAiB,SAACL,GAAmB,OAAKA,EAAMC,UAAU5C,WAAY,EACtEiD,EAAe,SAACN,GAAmB,OAAKA,EAAMC,UAAUM,SAAU,EAClEC,EAAuB,SAACR,GAAmB,OAAKA,EAAMC,UAAUQ,iBAAkB,EAClFC,EAAiB,SAACV,GAAmB,OAAKA,EAAMC,UAAU1B,MAAO,GAG3CoC,EAAAA,EAAAA,IAAeZ,EAAUM,GAAgB,SAACH,EAAO7C,GAEhF,OAAO6C,EAAM3B,QAAO,SAACqC,GAAI,OAAK,CAAI,GAItC,ICiHA,MA/GA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,MAEXZ,GAAQa,EAAAA,EAAAA,IAAYhB,GACpB1C,GAAc0D,EAAAA,EAAAA,IAAYV,GAC1BE,GAAYQ,EAAAA,EAAAA,IAAYT,GACxB/B,GAASwC,EAAAA,EAAAA,IAAYL,GACrBD,GAAoBM,EAAAA,EAAAA,IAAYP,GAChCtD,GAAkB6D,EAAAA,EAAAA,IAAYX,GAC9BhD,GAAW2D,EAAAA,EAAAA,IAAYZ,GAE7B,GAAwCa,EAAAA,EAAAA,MAAiB,eAAlDC,EAAY,KAAEC,EAAe,KAgB9BC,GAAaC,EAAAA,EAAAA,QAAOH,EAAaI,IAAI,SACrCC,GAAYF,EAAAA,EAAAA,QAAO,CACvBtC,OAAQ,KACRD,KAAM,KAkCR,OA/BA0C,EAAAA,EAAAA,YAAU,WACJN,EAAaI,IAAI,UACnBC,EAAUE,SAAO,kBACZF,EAAUE,SAAO,IACpB3C,KAAMoC,EAAaI,IAAI,WAIvBJ,EAAaI,IAAI,YACnBC,EAAUE,SAAO,kBACZF,EAAUE,SAAO,IACpB1C,OAAuC,SAA/BmC,EAAaI,IAAI,UAAuB,KAAsC,SAA/BJ,EAAaI,IAAI,aAIvD,IAAjBnB,EAAMuB,QACRZ,GAAca,EAAAA,EAAAA,IAAcP,EAAWK,QAAUG,OAAOR,EAAWK,SAAW,EAAGpE,EAAUkE,EAAUE,SAEzG,GAAG,CAACX,EAAUzD,EAAU6D,EAAcf,EAAMuB,UAI5CF,EAAAA,EAAAA,YAAU,WACRL,GAAgB,SAACU,GAIf,OAHkB,OAAlBrD,EAAOO,OAAkB8C,EAAKC,IAAI,UAA4B,IAAlBtD,EAAOO,OAAkB,OAAS,SAAW8C,EAAKE,OAAO,UACrGvD,EAAOM,KAAO+C,EAAKC,IAAI,OAAQtD,EAAOM,MAAQ+C,EAAKE,OAAO,QAC1C,IAAhBzE,EAAoBuE,EAAKC,IAAI,OAAQxE,EAAY0E,YAAcH,EAAKE,OAAO,QACpEF,CACT,GACF,GAAG,CAACvE,EAAakB,EAAOO,OAAQP,EAAOM,KAAMqC,KAG3C,iCACE,SAAC,EAAS,CACR/D,gBAlDN,SAAyBqB,EAAcpB,GACrCyD,GAAca,EAAAA,EAAAA,IAAclD,EAAMpB,EAAUmB,GAC9C,EAiDMnB,SAAUA,EACVF,gBAAiBA,EACjBG,YAAaA,KAGf,SAAC,EAAW,CAACkB,OAAQA,EAAQI,YApDjC,SAA4BJ,GAC1BsC,GAAca,EAAAA,EAAAA,IAAc,EAAGtE,EAAUmB,GAC3C,KAoDI,iBAAKyD,MAAO,CAAEC,SAAU,YAAa,UAClC1B,IAAa,SAAC2B,EAAA,EAAM,KACrB,wBACGhC,EAAMzB,KAAI,SAACmC,GACV,OACE,gBAAkBzC,UAAWC,EAAO,WAClC,4BACE,SAAC,KAAO,CAAC+D,GAAE,qBAAgBvB,EAAKwB,IAAK,UACnC,gBAAKjE,UAAWC,EAASiE,IAAKzB,EAAK0B,OAAOC,MAAQ3B,EAAK0B,OAAOC,MAAQC,EAAWC,IAAI,eAEvF,mBACEnE,UAzEO8D,EAyEmBxB,EAAKwB,GAxExC3B,EAAkBiC,MAAK,SAACC,GAAM,OAAKA,IAAWP,CAAE,KAyEvCjE,UAAWC,EACXC,QAAS,WACPwC,GAAc+B,EAAAA,EAAAA,IAAkBhC,EAAKwB,GAAIxB,EAAKiC,UAChD,EAAE,SAEDjC,EAAKiC,SAAW,WAAa,eAGlC,iBAAK1E,UAAWC,EAAc,WAC5B,cAAGD,UAAWC,EAAO,SAAEwC,EAAKjB,OAC3BiB,EAAKkC,SAAU,cAAG3E,UAAWC,EAAS,SAAEwC,EAAKkC,aAEhD,yBACG,wBAAwB,KAAG,0BApBvBlC,EAAKwB,IAnE1B,IAAyBA,CA2FjB,WAKV,C","sources":["webpack://react-01/./src/components/Users/Users.module.css?b9d0","webpack://react-01/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.tsx","components/Users/UsersSearch.tsx","redux/usersSelector.ts","components/Users/UsersPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Users_item__KD6rO\",\"photo\":\"Users_photo__r-B0M\",\"button\":\"Users_button__r5-uP\",\"profileInfo\":\"Users_profileInfo__E7Th-\",\"name\":\"Users_name__85yu-\",\"status\":\"Users_status__2SZCL\"};","// extracted by mini-css-extract-plugin\nexport default {\"pages\":\"Paginator_pages__xZaO7\",\"page\":\"Paginator_page__FNDKJ\",\"activePage\":\"Paginator_activePage__5CqDU\",\"setsWrapper\":\"Paginator_setsWrapper__zjfy2\",\"pagesSetBtn\":\"Paginator_pagesSetBtn__UgVZS\",\"setsText\":\"Paginator_setsText__MjhZ-\"};","import React, { useState } from \"react\";\nimport s from \"./Paginator.module.css\";\n\ntype PropsType = {\n  totalUsersCount: number;\n  handlePageClick: (page: number, pageSize: number) => void;\n  pageSize: number;\n  currentPage: number;\n  portionSize?: number;\n};\n\nfunction Paginator({ totalUsersCount, handlePageClick, pageSize = 20, currentPage = 1, portionSize = 20 }: PropsType) {\n  const pagesCount = Math.ceil(totalUsersCount / pageSize);\n  const pages: Array<number> = [];\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  const totalPortions = Math.ceil(pagesCount / portionSize);\n  let [currentPortion, setCurrentPortion] = useState(Math.ceil(currentPage / portionSize));\n  const lesserPortionBorder = (currentPortion - 1) * portionSize;\n  const biggerPortionBorder = currentPortion * portionSize + 1;\n\n  return (\n    <>\n      <div className={s.setsWrapper}>\n        {pagesCount > 120 && (\n          <button\n            className={s.pagesSetBtn}\n            onClick={() => setCurrentPortion(currentPortion - 10)}\n            disabled={currentPortion <= 10}\n          >\n            &#60;&#60;\n          </button>\n        )}\n        {pagesCount > 20 && (\n          <button\n            className={s.pagesSetBtn}\n            onClick={() => setCurrentPortion(currentPortion - 1)}\n            disabled={currentPortion === 1}\n          >\n            &#60;\n          </button>\n        )}\n        {/* <span className={s.setsText}>\n          Total pages sets: {totalPortions}, current pages set: {currentPortion}\n        </span> */}\n        <ul className={s.pages}>\n          {pages\n            .filter((page) => lesserPortionBorder < page && page < biggerPortionBorder)\n            .map((page) => {\n              return (\n                <li key={page}>\n                  <button\n                    onClick={() => {\n                      handlePageClick(page, pageSize);\n                    }}\n                    className={`${s.page} ${page === currentPage && s.activePage}`}\n                  >\n                    {page}\n                  </button>\n                </li>\n              );\n            })}\n        </ul>\n        {pagesCount > 20 && (\n          <button\n            className={s.pagesSetBtn}\n            onClick={() => setCurrentPortion(currentPortion + 1)}\n            disabled={currentPortion === totalPortions}\n          >\n            &#62;\n          </button>\n        )}\n        {pagesCount > 120 && (\n          <button\n            className={s.pagesSetBtn}\n            onClick={() => setCurrentPortion(currentPortion + 10)}\n            disabled={currentPortion >= totalPortions - 10}\n          >\n            &#62; &#62;\n          </button>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Paginator;\n","import { Field, Form, Formik } from \"formik\";\nimport { UsersFilterType } from \"../../redux/usersReducer\";\n\ntype PropTypes = {\n  searchUsers: (filter: UsersFilterType) => void;\n  filter: UsersFilterType;\n};\n\ntype FormTypes = {\n  term: string;\n  friend: \"null\" | \"true\" | \"false\";\n};\n\nfunction UsersSearch({ searchUsers, filter }: PropTypes) {\n  let timeout: any;\n\n  function handleSubmit(values: FormTypes, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }) {\n    const filter: UsersFilterType = {\n      term: values.term,\n      friend: values.friend === \"true\" ? true : values.friend === \"false\" ? false : null,\n    };\n\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      searchUsers(filter);\n    }, 750);\n\n    setSubmitting(false);\n  }\n\n  const initialValues: FormTypes = {\n    term: filter.term,\n    friend: filter.friend === null ? \"null\" : filter.friend === true ? \"true\" : \"false\",\n  };\n\n  return (\n    <Formik enableReinitialize initialValues={initialValues} onSubmit={handleSubmit}>\n      {({ isSubmitting, submitForm, resetForm, setFieldValue }) => (\n        <Form onChange={submitForm}>\n          <Field type=\"text\" name=\"term\" placeholder=\"Search by name...\" />\n          <Field component=\"select\" name=\"friend\">\n            <option value=\"null\">All</option>\n            <option value=\"true\">Only friends</option>\n            <option value=\"false\">Only NOT a friends</option>\n          </Field>\n          <button\n            type=\"button\"\n            onClick={() => {\n              setFieldValue(\"friend\", \"null\");\n              setFieldValue(\"term\", \"\");\n              searchUsers({ term: \"\", friend: null });\n            }}\n          >\n            Reset\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default UsersSearch;\n","import { createSelector } from \"reselect\";\nimport { AppStateType } from \"./redux-store\";\n\nexport const getUsers = (state: AppStateType) => state.usersPage.users;\nexport const getPageSize = (state: AppStateType) => state.usersPage.pageSize;\nexport const getTotalUsersCount = (state: AppStateType) => state.usersPage.totalUsersCount;\nexport const getCurrentPage = (state: AppStateType) => state.usersPage.currentPage;\nexport const getIsLoading = (state: AppStateType) => state.usersPage.isLoading;\nexport const getAreFetchingFollow = (state: AppStateType) => state.usersPage.areFetchingFollow;\nexport const getUsersFilter = (state: AppStateType) => state.usersPage.filter;\n\n// Optimized selector with reselect lib.\nexport const getUsersReselectLib = createSelector(getUsers, getCurrentPage, (users, currentPage) => {\n  if (true) {\n    return users.filter((user) => true);\n  } else {\n    return users;\n  }\n});\n","import s from \"./Users.module.css\";\nimport userPhoto from \"../../assets/images/profilePicture.webp\";\nimport { NavLink, useSearchParams } from \"react-router-dom\";\nimport Loader from \"../common/Loader\";\nimport Paginator from \"../common/Paginator/Paginator\";\nimport UsersSearch from \"./UsersSearch\";\nimport { UsersFilterType, actions, getUsersThunk, toggleFollowThunk } from \"../../redux/usersReducer\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport {\n  getAreFetchingFollow,\n  getCurrentPage,\n  getIsLoading,\n  getPageSize,\n  getTotalUsersCount,\n  getUsers,\n  getUsersFilter,\n} from \"../../redux/usersSelector\";\nimport { useEffect, useRef } from \"react\";\n\nfunction UsersPage() {\n  const dispatch = useDispatch();\n\n  const users = useSelector(getUsers);\n  const currentPage = useSelector(getCurrentPage);\n  const isLoading = useSelector(getIsLoading);\n  const filter = useSelector(getUsersFilter);\n  const areFetchingFollow = useSelector(getAreFetchingFollow);\n  const totalUsersCount = useSelector(getTotalUsersCount);\n  const pageSize = useSelector(getPageSize);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  function setButtonStatus(id: number) {\n    return areFetchingFollow.some((userId) => userId === id);\n  }\n\n  function handlePageClick(page: number, pageSize: number) {\n    dispatch<any>(getUsersThunk(page, pageSize, filter));\n  }\n\n  function handleFilterChange(filter: UsersFilterType) {\n    dispatch<any>(getUsersThunk(1, pageSize, filter));\n  }\n\n  // BIND STATE TO SEARCH PARAMS\n\n  const actualPage = useRef(searchParams.get(\"page\"));\n  const newFilter = useRef({\n    friend: null as null | boolean,\n    term: \"\",\n  });\n\n  useEffect(() => {\n    if (searchParams.get(\"term\")) {\n      newFilter.current = {\n        ...newFilter.current,\n        term: searchParams.get(\"term\") as string,\n      };\n    }\n\n    if (searchParams.get(\"friend\")) {\n      newFilter.current = {\n        ...newFilter.current,\n        friend: searchParams.get(\"friend\") === \"null\" ? null : searchParams.get(\"friend\") === \"true\" ? true : false,\n      };\n    }\n\n    if (users.length === 0) {\n      dispatch<any>(getUsersThunk(actualPage.current ? Number(actualPage.current) : 1, pageSize, newFilter.current));\n    }\n  }, [dispatch, pageSize, searchParams, users.length]);\n\n  // BIND SEARCH PARAMS TO STATE\n\n  useEffect(() => {\n    setSearchParams((prev) => {\n      filter.friend !== null ? prev.set(\"friend\", filter.friend === true ? \"true\" : \"false\") : prev.delete(\"friend\");\n      filter.term ? prev.set(\"term\", filter.term) : prev.delete(\"term\");\n      currentPage !== 1 ? prev.set(\"page\", currentPage.toString()) : prev.delete(\"page\");\n      return prev;\n    });\n  }, [currentPage, filter.friend, filter.term, setSearchParams]);\n\n  return (\n    <>\n      <Paginator\n        handlePageClick={handlePageClick}\n        pageSize={pageSize}\n        totalUsersCount={totalUsersCount}\n        currentPage={currentPage}\n      />\n\n      <UsersSearch filter={filter} searchUsers={handleFilterChange} />\n\n      <div style={{ position: \"relative\" }}>\n        {isLoading && <Loader />}\n        <ul>\n          {users.map((user) => {\n            return (\n              <li key={user.id} className={s.item}>\n                <div>\n                  <NavLink to={`../profile/${user.id}`}>\n                    <img className={s.photo} src={user.photos.small ? user.photos.small : userPhoto} alt=\"Profile\" />\n                  </NavLink>\n                  <button\n                    disabled={setButtonStatus(user.id)}\n                    className={s.button}\n                    onClick={() => {\n                      dispatch<any>(toggleFollowThunk(user.id, user.followed));\n                    }}\n                  >\n                    {user.followed ? \"Unfollow\" : \"Follow\"}\n                  </button>\n                </div>\n                <div className={s.profileInfo}>\n                  <p className={s.name}>{user.name}</p>\n                  {user.status && <p className={s.status}>{user.status}</p>}\n                </div>\n                <p>\n                  {\"user.location.country\"}, {\"user.location.city\"}\n                </p>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </>\n  );\n}\n\nexport default UsersPage;\n"],"names":["totalUsersCount","handlePageClick","pageSize","currentPage","portionSize","pagesCount","Math","ceil","pages","i","push","totalPortions","useState","currentPortion","setCurrentPortion","lesserPortionBorder","biggerPortionBorder","className","s","onClick","disabled","filter","page","map","timeout","searchUsers","initialValues","term","friend","enableReinitialize","onSubmit","values","setSubmitting","clearTimeout","setTimeout","isSubmitting","submitForm","setFieldValue","resetForm","onChange","type","name","placeholder","component","value","getUsers","state","usersPage","users","getPageSize","getTotalUsersCount","getCurrentPage","getIsLoading","isLoading","getAreFetchingFollow","areFetchingFollow","getUsersFilter","createSelector","user","dispatch","useDispatch","useSelector","useSearchParams","searchParams","setSearchParams","actualPage","useRef","get","newFilter","useEffect","current","length","getUsersThunk","Number","prev","set","delete","toString","style","position","Loader","to","id","src","photos","small","userPhoto","alt","some","userId","toggleFollowThunk","followed","status"],"sourceRoot":""}
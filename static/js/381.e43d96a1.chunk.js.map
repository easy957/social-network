{"version":3,"file":"static/js/381.e43d96a1.chunk.js","mappings":"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","sources":["HOC/withAuthRedirect.tsx","webpack://react-01/./src/components/Messages/Dialog/Dialog.module.css?07ac","components/Messages/Dialog/Dialog.tsx","webpack://react-01/./src/components/Messages/Message/Message.module.css?0dcd","components/Messages/Message/Message.tsx","webpack://react-01/./src/components/Messages/NewMessage/NewMessage.module.css?f6bb","components/Messages/NewMessage/NewMessage.tsx","webpack://react-01/./src/components/Messages/Messages.module.css?8e7e","components/Messages/Messages.tsx","components/Messages/MessagesContainer.tsx","components/common/FormControl/FormControl.tsx","components/utils/validate.ts","webpack://react-01/./src/components/common/FormControl/FormControl.module.css?004a"],"sourcesContent":["import { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { AppStateType } from \"../redux/redux-store\";\n\nfunction mapStateToProps(state: AppStateType) {\n  return { isAuth: state.auth.isAuth };\n}\n\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>;\n\nfunction withAuthRedirect<WCP extends MapStatePropsType>(Component: React.ComponentType<WCP>) {\n  function ContainerComponent(props: MapStatePropsType) {\n    const { isAuth, ...restProps } = props;\n    if (!isAuth) return <Navigate to=\"/login\" />;\n\n    return <Component {...(restProps as WCP)} />;\n  }\n\n  return connect<MapStatePropsType, {}, WCP, AppStateType>(mapStateToProps)(ContainerComponent);\n}\n\nexport default withAuthRedirect;\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__zYDN-\"};","import { NavLink } from \"react-router-dom\";\nimport s from \"./Dialog.module.css\";\n\ntype PropsType = {\n  name: string;\n  id: number;\n};\n\nfunction Dialog({ name, id }: PropsType) {\n  return (\n    <li>\n      <NavLink className={s.dialog} to={String(id)}>\n        {name}\n      </NavLink>\n    </li>\n  );\n}\n\nexport default Dialog;\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__R6tQz\",\"myItem\":\"Message_myItem__nYLyH\",\"friendItem\":\"Message_friendItem__O1qg3\",\"friendMessage\":\"Message_friendMessage__WdAX7\",\"myMessage\":\"Message_myMessage__4z7IF\",\"name\":\"Message_name__HmymJ\",\"textAlignEnd\":\"Message_textAlignEnd__beZU3\"};","import s from \"./Message.module.css\";\n\ntype PropsType = {\n  message: string;\n  IsSentByMe: boolean;\n};\n\nfunction Message({ message, IsSentByMe }: PropsType) {\n  return (\n    <li className={IsSentByMe ? s.myItem : s.friendItem}>\n      <p\n        className={`${s.message} ${IsSentByMe ? s.myMessage : s.friendMessage}`}\n      >\n        {message}\n      </p>\n      <p className={`${s.name} ${IsSentByMe ? s.textAlignEnd : \"\"}`}>\n        {IsSentByMe ? \"me\" : \"name\"}\n      </p>\n    </li>\n  );\n}\n\nexport default Message;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"NewMessage_wrapper__NJhZh\",\"input\":\"NewMessage_input__WYs9-\",\"button\":\"NewMessage_button__lBt1U\"};","import { Field, InjectedFormProps } from \"redux-form\";\nimport { FormControl } from \"../../common/FormControl/FormControl\";\nimport { maxLength, required } from \"../../utils/validate\";\nimport s from \"./NewMessage.module.css\";\n\nconst maxLength300 = maxLength(300);\n\nfunction NewMessage({\n  handleSubmit,\n}: InjectedFormProps<{ newMessage: string }>) {\n  return (\n    <form onSubmit={handleSubmit} className={s.wrapper}>\n      <Field\n        name=\"newMessage\"\n        type=\"textarea\"\n        component={FormControl}\n        className={s.input}\n        validate={[required, maxLength300]}\n      />\n      <button className={s.button}>Send message</button>\n    </form>\n  );\n}\n\nexport default NewMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Messages_container__o0PO5\",\"dialogs\":\"Messages_dialogs__3cN8M\",\"active\":\"Messages_active__b93f2\",\"messages\":\"Messages_messages__8s+pC\",\"messagesContainer\":\"Messages_messagesContainer__EthqR\"};","import Dialog from \"./Dialog/Dialog\";\nimport Message from \"./Message/Message\";\nimport NewMessage from \"./NewMessage/NewMessage\";\nimport s from \"./Messages.module.css\";\nimport { reduxForm } from \"redux-form\";\nimport { InitialStateType } from \"../../redux/messagesReducer\";\n\nconst MessageReduxForm = reduxForm<{ newMessage: string }>({\n  form: \"newMessage\",\n})(NewMessage);\n\ntype PropsType = {\n  state: InitialStateType;\n  sendMessage: (message: string) => void;\n};\n\nfunction Messages({ state, sendMessage }: PropsType) {\n  function onSendMessage({ newMessage }: { newMessage: string }) {\n    sendMessage(newMessage);\n  }\n\n  return (\n    <div className={s.container}>\n      <ul className={s.dialogs}>\n        {state.users.map(({ user, id }) => (\n          <Dialog name={user} id={id} key={id} />\n        ))}\n      </ul>\n      <div className={s.messagesContainer}>\n        <ul className={s.messages}>\n          {state.messages.map(({ text, id, IsSentByMe }) => (\n            <Message key={id} message={text} IsSentByMe={IsSentByMe} />\n          ))}\n        </ul>\n        <MessageReduxForm onSubmit={onSendMessage} />\n      </div>\n    </div>\n  );\n}\n\nexport default Messages;\n","import { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport withAuthRedirect from \"../../HOC/withAuthRedirect\";\nimport { actions } from \"../../redux/messagesReducer\";\nimport Messages from \"./Messages\";\nimport { AppStateType } from \"../../redux/redux-store\";\n\nconst mapStateToProps = (state: AppStateType) => {\n  return {\n    state: state.messagesPage,\n  };\n};\n\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>;\ntype MapDispatchPropsType = {\n  sendMessage: (message: string) => void;\n};\n\nexport default compose<React.ComponentType>(\n  withAuthRedirect,\n\n  connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {\n    sendMessage: actions.sendMessage,\n  })\n)(Messages);\n","import { WrappedFieldProps } from \"redux-form\";\nimport s from \"./FormControl.module.css\";\n\ntype InputTypes = \"textarea\" | \"text\" | \"email\" | \"password\" | \"checkbox\";\ntype PropsType = {\n  type: InputTypes;\n};\n\nexport function FormControl({\n  type = \"text\",\n  meta: { error, touched },\n  input,\n  ...restProps\n}: WrappedFieldProps & PropsType) {\n  const notValid = touched && error;\n  function getClasses() {\n    return `${s.formControl} ${notValid ? s.error : \"\"}`;\n  }\n  return (\n    <div className={getClasses()}>\n      {type === \"textarea\" && <textarea {...input} {...restProps} />}\n      {type === \"text\" && <input type=\"text\" {...input} {...restProps} />}\n      {type === \"email\" && <input type=\"email\" {...input} {...restProps} />}\n      {type === \"password\" && (\n        <input type=\"password\" {...input} {...restProps} />\n      )}\n      {type === \"checkbox\" && (\n        <input type=\"checkbox\" {...input} {...restProps} />\n      )}\n      {notValid && <span>{error}</span>}\n    </div>\n  );\n}\n","export type ValidatorType = (value: string) => string | undefined;\n\nexport const required: ValidatorType = (value) =>\n  value ? undefined : \"Required field\";\n\nexport const maxLength =\n  (max: number): ValidatorType =>\n  (value) =>\n    value && value.length > max\n      ? `Length must be less than ${max} symbols`\n      : undefined;\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControl_formControl__R9RWM\",\"error\":\"FormControl_error__CC5RU\",\"formError\":\"FormControl_formError__CyVj3\"};"],"names":["mapStateToProps","state","isAuth","auth","Component","connect","props","restProps","to","name","id","className","s","String","message","IsSentByMe","maxLength300","maxLength","handleSubmit","onSubmit","Field","type","component","FormControl","validate","required","MessageReduxForm","reduxForm","form","NewMessage","sendMessage","users","map","user","messages","text","newMessage","compose","withAuthRedirect","messagesPage","actions","Messages","meta","error","touched","input","notValid","value","undefined","max","length"],"sourceRoot":""}
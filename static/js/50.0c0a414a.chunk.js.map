{"version":3,"file":"static/js/50.0c0a414a.chunk.js","mappings":"iPAoCA,MA/BA,SAAmB,GAA0B,IAAxBA,EAAY,EAAZA,aAAcC,EAAK,EAALA,MACjC,OACE,kBAAMC,SAAUF,EAAa,WAC3B,0BACE,SAACG,EAAA,EAAK,CACJC,SAAU,CAACC,EAAAA,GACXC,KAAK,QACLC,KAAK,QACLC,UAAWC,EAAAA,EACXC,YAAY,aAGhB,0BACE,SAACP,EAAA,EAAK,CACJC,SAAU,CAACC,EAAAA,GACXC,KAAK,WACLE,UAAWC,EAAAA,EACXF,KAAK,WACLG,YAAY,gBAGhB,4BACE,SAACP,EAAA,EAAK,CAACG,KAAK,aAAaE,UAAU,QAAQD,KAAK,cAChD,0BAAM,mBAEPN,IAAS,cAAGU,UAAWC,EAAAA,EAAAA,UAAY,SAAEX,KACtC,4BAAQ,YAGd,EC5BMY,GAAiBC,EAAAA,EAAAA,GAAU,CAC/BC,KAAM,SADeD,CAEpBE,GAkBH,IAIA,GAAeC,EAAAA,EAAAA,KAJS,SAACC,GAAK,MAAM,CAClCC,OAAQD,EAAME,KAAKD,OACpB,GAEuC,CAAEE,MAAOC,EAAAA,IAAjD,EApBA,SAAe,GAAoB,IAAlBD,EAAK,EAALA,MAKf,OAL4B,EAANF,QAMb,SAAC,KAAQ,CAACI,GAAG,cAGpB,iCACE,wBAAI,WACJ,SAACV,EAAc,CAACX,SAVpB,SAAkBsB,GAChBH,EAAMG,EACR,MAWF,G,4HCtBO,SAASf,EAAY,GAKxB,IAAD,IAJDF,KAAAA,OAAI,MAAG,OAAM,MACbkB,KAAQxB,EAAK,EAALA,MAAOyB,EAAO,EAAPA,QACfC,EAAK,EAALA,MACGC,GAAS,YAENC,EAAWH,GAAWzB,EAI5B,OACE,iBAAKU,UAHC,GAAN,OAAUC,EAAAA,EAAAA,YAAa,YAAIiB,EAAWjB,EAAAA,EAAAA,MAAU,IAGnB,UACjB,aAATL,IAAuB,uCAAcoB,GAAWC,IACvC,SAATrB,IAAmB,kCAAOA,KAAK,QAAWoB,GAAWC,IAC5C,UAATrB,IAAoB,kCAAOA,KAAK,SAAYoB,GAAWC,IAC9C,aAATrB,IACC,kCAAOA,KAAK,YAAeoB,GAAWC,IAE9B,aAATrB,IACC,kCAAOA,KAAK,YAAeoB,GAAWC,IAEvCC,IAAY,0BAAO5B,MAG1B,C,8EC1BO,IAAMI,EAAW,SAACyB,GAAK,OAAMA,OAAQC,EAAY,gBAAgB,EAE3DC,EAAY,SAACC,GAAG,OAAK,SAACH,GAAK,OACtCA,GAASA,EAAMI,OAASD,EAAG,mCACKA,EAAG,iBAC/BF,CAAU,CAAD,C,qBCJf,KAAgB,YAAc,iCAAiC,MAAQ,2BAA2B,UAAY,+B","sources":["components/Login/LoginForm.jsx","components/Login/Login.jsx","components/common/FormControl/FormControl.jsx","components/utils/validate.js","webpack://react-01/./src/components/common/FormControl/FormControl.module.css?004a"],"sourcesContent":["import { Field } from \"redux-form\";\nimport { FormControl } from \"../common/FormControl/FormControl\";\nimport { required } from \"../utils/validate\";\nimport s from \"../common/FormControl/FormControl.module.css\";\n\nfunction LoginForm({ handleSubmit, error }) {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field\n          validate={[required]}\n          name=\"email\"\n          type=\"email\"\n          component={FormControl}\n          placeholder=\"Email\"\n        />\n      </div>\n      <div>\n        <Field\n          validate={[required]}\n          name=\"password\"\n          component={FormControl}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n      </div>\n      <div>\n        <Field name=\"rememberMe\" component=\"input\" type=\"checkbox\" />\n        <span>remember me</span>\n      </div>\n      {error && <p className={s.formError}>{error}</p>}\n      <button>Login</button>\n    </form>\n  );\n}\n\nexport default LoginForm;\n","import { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { reduxForm } from \"redux-form\";\nimport { loginThunk } from \"../../redux/authReducer\";\nimport LoginForm from \"./LoginForm\";\n\nconst LoginReduxForm = reduxForm({\n  form: \"login\",\n})(LoginForm);\n\nfunction Login({ login, isAuth }) {\n  function onSubmit(formData) {\n    login(formData);\n  }\n\n  if (isAuth) {\n    return <Navigate to=\"/profile\" />;\n  }\n  return (\n    <>\n      <h1>Login</h1>\n      <LoginReduxForm onSubmit={onSubmit} />\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport default connect(mapStateToProps, { login: loginThunk })(Login);\n","import s from \"./FormControl.module.css\";\n\nexport function FormControl({\n  type = \"text\",\n  meta: { error, touched },\n  input,\n  ...restProps\n}) {\n  const notValid = touched && error;\n  function getClasses() {\n    return `${s.formControl} ${notValid ? s.error : \"\"}`;\n  }\n  return (\n    <div className={getClasses()}>\n      {type === \"textarea\" && <textarea {...input} {...restProps} />}\n      {type === \"text\" && <input type=\"text\" {...input} {...restProps} />}\n      {type === \"email\" && <input type=\"email\" {...input} {...restProps} />}\n      {type === \"password\" && (\n        <input type=\"password\" {...input} {...restProps} />\n      )}\n      {type === \"checkbox\" && (\n        <input type=\"checkbox\" {...input} {...restProps} />\n      )}\n      {notValid && <span>{error}</span>}\n    </div>\n  );\n}\n","export const required = (value) => (value ? undefined : \"Required field\");\n\nexport const maxLength = (max) => (value) =>\n  value && value.length > max\n    ? `Length must be less than ${max} symbols`\n    : undefined;\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControl_formControl__R9RWM\",\"error\":\"FormControl_error__CC5RU\",\"formError\":\"FormControl_formError__CyVj3\"};"],"names":["handleSubmit","error","onSubmit","Field","validate","required","name","type","component","FormControl","placeholder","className","s","LoginReduxForm","reduxForm","form","LoginForm","connect","state","isAuth","auth","login","loginThunk","to","formData","meta","touched","input","restProps","notValid","value","undefined","maxLength","max","length"],"sourceRoot":""}